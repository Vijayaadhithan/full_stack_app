# Example Nginx configuration to load balance multiple API instances.
# Copy to /etc/nginx/conf.d/indian-budget-tracker.conf and adjust paths/hosts.

upstream indian_budget_tracker {
    # Point these to each Node/PM2 instance that runs the Express app.
    server 127.0.0.1:5000 max_fails=3 fail_timeout=30s;
    server 127.0.0.1:5001 max_fails=3 fail_timeout=30s;
    # Add more servers/IPs here or reference container hostnames when using Docker/Kubernetes.
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80;
    server_name example.com;

    # Optional automatic HTTP->HTTPS redirect when TLS is terminated elsewhere.
    # return 301 https://$host$request_uri;

    # Pass client and proxy metadata through to Express so rate-limiters and logging stay accurate.
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    location / {
        proxy_pass http://indian_budget_tracker;
        proxy_read_timeout 90s;
        proxy_connect_timeout 15s;
        proxy_send_timeout 30s;

        # Disable buffering so streaming/websocket responses return immediately.
        proxy_buffering off;
    }

    # Serve uploaded assets directly if desired. Update the path to match your deployment.
    location /uploads/ {
        alias /var/www/indian-budget-tracker/uploads/;
        autoindex off;
        access_log off;
        add_header Cache-Control "public, max-age=300";
    }
}
